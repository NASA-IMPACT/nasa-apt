version: '3.8'
services:

  db:
    # Postgres db for local development only.
    # For staging/production, see RDS instance in stack/app.py
    image: postgres:11.8
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: nasadb
      POSTGRES_USER: masteruser
      POSTGRES_PASSWORD: password
    command: postgres -c log_statement=all
  
  bootstrapper: 
    build: 
      context: ./
      dockerfile: ./fixture_data/bootstrapper.Dockerfile
    command: "sh fixture_data/setup.sh"
    volumes: 
      - ./db:/db
      - ./db:/var/lib/postgresql/data
      - ./fixture_data/:/db/fixture_data
    environment: 
      AWS_ACCESS_KEY_ID: stub
      AWS_SECRET_ACCESS_KEY: stub
      AWS_DEFAULT_REGION: us-east-1
      S3_BUCKET: nasa-apt-dev-files  
      POSTGRES_DB: nasadb
      POSTGRES_USER: masteruser
      POSTGRES_PASSWORD: password
      POSTGRES_ADMIN_CREDENTIALS_ARN: mocked_credentials_arn
    depends_on: 
      - db-ready
      - localstack-ready
      
  elastic:
    # Elastic db for local development only.
    # For staging/production, add elasticache instance
    image: docker.elastic.co/elasticsearch/elasticsearch:7.8.1
    environment:
      - discovery.type=single-node
      - http.port=9200
      - http.cors.allow-origin=*
      - http.cors.enabled=true
      - http.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization
      - http.cors.allow-credentials=true
    ports:
      - "9200:9200"
  # localstack for local development only. AWS S3 used for staging/production
  
  mail: 
    image: bytemark/smtp
    restart: always
  
  localstack:
    image: localstack/localstack:0.12.7
    environment:
      LOCALSTACK_API_KEY: ${LOCALSTACK_API_KEY}
      SERVICES: s3,secretsmanager,cognito
      SMTP_HOST: mail
      SMTP_USER: test@example.com
      SMTP_PASS: secretpassword
      SMTP_EMAIL: no-reply@example.com
      HOSTNAME: localhost
      HOSTNAME_EXTERNAL: localhost
      AWS_ACCESS_KEY_ID: stub
      AWS_SECRET_ACCESS_KEY: stub
      AWS_DEFAULT_REGION: us-east-1
      S3_BUCKET: nasa-apt-dev-files  
      POSTGRES_DB: nasadb
      POSTGRES_USER: masteruser
      POSTGRES_PASSWORD: password
      POSTGRES_ADMIN_CREDENTIALS_ARN: mocked_credentials_arn
    ports:
      - "4566:4566"
      
  api:
    build:
      context: ./
      dockerfile: app/local.Dockerfile
    image: nasa-apt/dev/app
    command: >
      sh -c "
        python wait_for_localstack_ready.py &&
        uvicorn app.main:app --host 0.0.0.0 --port 80 --reload
      "
    ports:
      - "8000:80"
    volumes:
      - ./app:/app/app
      - ./fixture_data/wait_for_localstack_ready.py:/app/wait_for_localstack_ready.py
    environment:
      # the boto3 library needs these AWS_* env vars, even though we are using localstack.
      AWS_ACCESS_KEY_ID: stub
      AWS_SECRET_ACCESS_KEY: stub
      AWS_DEFAULT_REGION: us-east-1
      PROJECT_NAME: nasa-apt-api-local
      API_VERSION_STRING: /v2
      AWS_RESOURCES_ENDPOINT: http://localstack:4566
      S3_BUCKET: nasa-apt-dev-files
      POSTGRES_ADMIN_CREDENTIALS_ARN: mocked_credentials_arn
      # This URL omits the "http://" in order to remain consistent
      # with the value of the URL returned by the ElasticSearch Domain 
      # CDK component
      ELASTICSEARCH_URL: elastic:9200
      APT_FRONTEND_URL: $APT_FRONTEND_URL
      APP_CLIENT_ID: 3v15rnvglc8p9nkja4behaoijk
      USER_POOL_ID: us-east-1_myPaDY9o1
    depends_on:
      - bootstrapper
  swagger:
    image: swaggerapi/swagger-ui
    ports:
      - "8080:8080"
    expose:
      - "8080"
    environment:
      API_URL: http://localhost:8000/atbds
    depends_on:
      - api
  db-ready:
    image: dadarek/wait-for-dependencies
    depends_on:
      - db
    command: db:5432
  localstack-ready:
    image: dadarek/wait-for-dependencies
    depends_on:
      - localstack
    command: localstack:4566
  