version: "3.8"
services:
  db:
    # Postgres db for local development only.
    # For staging/production, see RDS instance in stack/app.py
    image: postgres:12.7
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: nasadb
      POSTGRES_USER: masteruser
      POSTGRES_PASSWORD: password
    command: postgres -c log_statement=all

  bootstrapper:
    # Sets up the necessary AWS resources in Localstack and
    # loads fixture data in the database
    build:
      context: ./
      dockerfile: ./fixture_data/bootstrapper.Dockerfile
    command: "sh fixture_data/setup.sh"
    volumes:
      - ./db:/db
      - ./db:/var/lib/postgresql/data
      - ./fixture_data/:/db/fixture_data
    environment:
      AWS_ACCESS_KEY_ID: stub
      AWS_SECRET_ACCESS_KEY: stub
      AWS_DEFAULT_REGION: us-east-1
      S3_BUCKET: nasa-apt-dev-files
      POSTGRES_DB: nasadb
      POSTGRES_USER: masteruser
      POSTGRES_PASSWORD: password
      POSTGRES_ADMIN_CREDENTIALS_ARN: mocked_credentials_arn
      USER_POOL_NAME: dev-users
      APP_CLIENT_NAME: dev-client
    depends_on:
      - db-ready
      - localstack-ready
  mail:
    image: namshi/smtp
    restart: always
    ports:
      - "25:25"
    environment:
      MAILNAME: developmentseed.org
      DISABLE_IPV6: 1

  opensearch-node-1:
    image: opensearchproject/opensearch:1.0.1
    container_name: opensearch
    environment:
      - cluster.name=opensearch-cluster
      - node.name=opensearch
      - node.master=true
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
      - http.cors.allow-origin=*,http://localhost:9000/,http://localhost:8000,http://localhost:8000/,http://localhost:8000/v2/,https://localhost:8000/v2
      - http.cors.enabled=true
      - http.cors.allow-headers="X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization"
      - http.cors.allow-credentials=true
      - plugins.security.disabled=true # this option should be used for development and test ONLY
    ports:
      - "9200:9200"
      - "9600:9600" # required for Performance Analyzer
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - opensearch-data:/usr/share/opensearch/data
      # - ./opensearch_spec/opensearch_config.yml:/usr/share/opensearch/config/opensearch.yml

  localstack:
    # localstack for local development only. AWS S3 used for staging/production
    image: localstack/localstack:0.12.13
    environment:
      LOCALSTACK_API_KEY: ${LOCALSTACK_API_KEY}
      SERVICES: s3,secretsmanager,cognito,ses, opensearch
      DEBUG: 1 # Uncomment to increase localstack logging output
      AWS_ACCESS_KEY_ID: stub
      AWS_SECRET_ACCESS_KEY: stub
      AWS_DEFAULT_REGION: us-east-1
      EXTRA_CORS_ALLOWED_ORIGINS: http://localhost:9000
    ports:
      - "4566:4566"

  api:
    build:
      context: ./
      dockerfile: app/Dockerfile
    image: nasa-apt/dev/app
    command: >
      sh -c "
        python wait_for_localstack_ready.py &&
        uvicorn app.main:app --host 0.0.0.0 --port 80 --reload
      "
    ports:
      - "8000:80"
    volumes:
      - ./app:/app/app
      - ./fixture_data/wait_for_localstack_ready.py:/app/wait_for_localstack_ready.py
    environment:
      # the boto3 library needs these AWS_* env vars, even though we are using localstack.
      AWS_ACCESS_KEY_ID: stub
      AWS_SECRET_ACCESS_KEY: stub
      AWS_DEFAULT_REGION: us-east-1
      PROJECT_NAME: nasa-apt-api-local
      API_VERSION_STRING: /v2
      AWS_RESOURCES_ENDPOINT: http://localstack:4566
      S3_BUCKET: nasa-apt-dev-files
      POSTGRES_ADMIN_CREDENTIALS_ARN: mocked_credentials_arn
      # This URL omits the "http://" in order to remain consistent
      # with the value of the URL returned by the opensearch Domain
      # CDK component
      OPENSEARCH_URL: $OPENSEARCH_URL
      APT_FRONTEND_URL: $APT_FRONTEND_URL
      USER_POOL_NAME: dev-users
      APP_CLIENT_NAME: dev-client
      NOTIFICATIONS_FROM: no-reply@ds.io
    depends_on:
      - bootstrapper

  db-ready:
    image: dadarek/wait-for-dependencies
    depends_on:
      - db
    command: db:5432

  localstack-ready:
    image: dadarek/wait-for-dependencies
    depends_on:
      - localstack
    command: localstack:4566

volumes:
  opensearch-data:
    name: opensearch-data
