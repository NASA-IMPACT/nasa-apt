version: '3.8'
services:
  db:
    # Postgres db for local development only.
    # For staging/production, see RDS instance in cloudformation.yaml
    image: postgres:11.1
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: nasadb
      POSTGRES_USER: masteruser
      POSTGRES_PASSWORD: password
    command: postgres -c log_statement=all
  elastic:
    # Elastic db for local development only.
    # For staging/production, add elasticache instance
    image: docker.elastic.co/elasticsearch/elasticsearch:7.8.1
    environment:
      - discovery.type=single-node
      - http.port=9200
      - http.cors.allow-origin=*
      - http.cors.enabled=true
      - http.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization
      - http.cors.allow-credentials=true
    ports:
      - "9200:9200"
  # localstack for local development only. AWS S3 used for staging/production
  localstack:
    image: localstack/localstack:latest
    ports:
      - 4572:4572 #s3
    environment:
      - SERVICES=s3
      - DATA_DIR=./figures
  rest-api:
    image: postgrest/postgrest:v6.0.2
    ports:
      - "3000:3000"
    environment:
      PGRST_DB_URI: postgres://masteruser:password@db:5432/nasadb
      PGRST_DB_SCHEMA: apt
      PGRST_DB_ANON_ROLE: app_user
    depends_on:
      - db
  pdf-api:
    build: ./pdf
    image: nasa-apt/dev/pdf
    ports:
      - "8000:8000"
    volumes:
      - type: bind
        source: ./pdf/app
        target: /app/app
    environment:
      # the boto3 library needs these AWS_* env vars, even though we are using localstack.
      AWS_ACCESS_KEY_ID: stub
      AWS_SECRET_ACCESS_KEY: stub
      REST_API_ENDPOINT: $REST_API_ENDPOINT
      S3_ENDPOINT: $S3_ENDPOINT
      PDFS_S3_BUCKET: $PDFS_S3_BUCKET
      FIGURES_S3_BUCKET: $FIGURES_S3_BUCKET
      DBURL: postgres://masteruser:password@db:5432/nasadb
      ELASTICURL: http://elastic:9200
    depends_on:
      - localstack
      - rest-api
  swagger:
    image: swaggerapi/swagger-ui
    ports:
      - "8080:8080"
    expose:
      - "8080"
    environment:
      API_URL: http://localhost:3000/
    depends_on:
      - rest-api
  db-ready:
    image: dadarek/wait-for-dependencies
    depends_on:
      - db
    command: db:5432
  localstack-ready:
    image: dadarek/wait-for-dependencies
    depends_on:
      - localstack
    command: localstack:4572
